title: attribute tests
author: Joshua Thijssen <joshua@saffire-lang.org>

**********
import io;

class foo {
    protected property a;
    protected property b;

    public method __ctor(string arg1, string arg2, string arg3) {
        self.a = arg1;
        self.b = arg2;
        self.c = arg3;
        io.print(self.__string());
    }

    public method __dtor() {
        io.print("dtor called!\n");
    }

    public method printit() {
        io.print("A: " , self.a, " B: " , self.b, " C: ", self.c, "\n");
    }

    public method geta() {
        return self.c;
    }

    public method __string() {
        return "[FOO OBJECT WITH " + self.a.__string() + " AND " + self.b.__string() + " AND " + self.c.__string() + "]\n";
    }
}

f = foo("foo1", "bar2", "baz3");
io.print("A: ", f.geta(), "\n");
======
[FOO OBJECT WITH foo1 AND bar2 AND baz3]
A: baz3
@@@@@@@
import io;

class foo {
    public method f1() {
        io.print("F1: ",self.__name(), "\n");
    }
    public method f2() {
        self.f1();
    }
    public method f3() {
        io.print("F3: ",self.__name(), "\n");
    }
}


class bar extends foo {
    public method f1() {
        io.print("BF1: ",self.__name(), "\n");
        self.f3();
        parent.f3();
        parent.f1();
    }
}

b = bar();
b.f2();
=======
BF1: bar
F3: bar
F3: foo
F1: foo