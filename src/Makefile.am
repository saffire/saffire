########################################################################
# INIT
########################################################################

# Set our optimization / debug flags
if DEBUG
  AM_CFLAGS = -ggdb  -O0 -D__DEBUG
  AM_CXXFLAGS = -ggdb -O0 -D__DEBUG
else
  AM_CFLAGS = -O2
  AM_CXXFLAGS = -O2
endif

if PARSEDEBUG
  AM_CFLAGS += -D__PARSEDEBUG
  AM_YFLAGS = -t -v
else
  AM_YFLAGS =
endif

# Add top include dir
AM_CFLAGS += -I$(top_srcdir)/src/include $(edit_CFLAGS) ${libxml2_CFLAGS}

# Complain about everything, except unused functions
AM_CFLAGS += -Wall -Wno-unused-function


noinst_LIBRARIES =


########################################################################
# Autogenerated stuff
########################################################################
include/gitversion.h:
	echo "" > $@
	echo "// Warning: this file is autogenerated. Do not manually modify" >> $@
	echo "#ifndef __GITVERSION_H__" >> $@
	echo "#define __GITVERSION_H__" >> $@
	echo "   #define git_revision \"$(shell git rev-parse HEAD)\"" >> $@
	echo "#endif" >> $@


########################################################################
# components/compiler
########################################################################

# Some additional rules for flex/bison file handling
BUILT_SOURCES=components/compiler/lex.yy.c include/gitversion.h
AM_LFLAGS = --outfile=components/compiler/$(LEX_OUTPUT_ROOT).c --header-file=include/compiler/$(LEX_OUTPUT_ROOT).h
AM_YFLAGS += -d

.NOTPARALLEL: include/compiler/parser.tab.h components/compiler/parser.tab.c components/compiler/lex.yy.c

# parser.tab.h cannot be used before parser.tab.c
include/compiler/parser.tab.h: components/compiler/parser.tab.c
	mv compiler/parser.tab.h include/compiler/parser.tab.h

# parser.tab.c is created by bison
components/compiler/parser.tab.c: components/compiler/saffire.y
	$(YACC) $(AM_YFLAGS) -o $@ $<
	mv components/compiler/parser.tab.h include/compiler/parser.tab.h

# lex.yy.c is created by lex
components/compiler/lex.yy.c: components/compiler/saffire.l
	$(LEX) $(AM_LFLAGS) $<

# Cleanup these files on a "make clean"
CLEANFILES = components/compiler/parser.tab.c \
             include/compiler/parser.tab.h \
             components/compiler/lex.yy.c \
             include/compiler/lex.yy.h \
             include/gitversion.h

noinst_LIBRARIES += libcompiler.a
libcompiler_a_SOURCES = components/compiler/parser.tab.c \
                        components/compiler/lex.yy.c \
                        components/compiler/parser_helpers.c \
                        components/compiler/ast_nodes.c \
                        components/compiler/bytecode/marshal.c \
                        components/compiler/bytecode/io.c \
                        components/compiler/ast_to_asm.c \
                        components/compiler/output/dot.c \
                        components/compiler/output/asm.c


########################################################################
# components/fastcgi
########################################################################

noinst_LIBRARIES += libfastcgi.a
libfastcgi_a_SOURCES = components/fastcgi/fastcgi_srv.c \
                       components/fastcgi/scoreboard.c \
                       components/fastcgi/daemonize.c



########################################################################
# components/general
########################################################################

noinst_LIBRARIES += libgeneral.a
libgeneral_a_SOURCES = components/general/hashtable.c \
                       components/general/hash/chained.c \
                       components/general/hash/hash_funcs.c \
                       components/general/smm.c \
                       components/general/smm/asprintf.c \
                       components/general/md5.c \
                       components/general/dll.c \
                       components/general/stack.c \
                       components/general/parse_options.c \
                       components/general/popen2.c \
                       components/general/gpg.c \
                       components/general/path_handling.c \
                       components/general/bzip2.c \
                       components/general/config.c \
                       components/general/output.c \
                       components/general/mutex.c \
                       components/general/printf/arg_printf.c \
                       components/general/ini.c \
                       components/general/base64.c


########################################################################
# components/modules
########################################################################

noinst_LIBRARIES += libmodules.a
libmodules_a_SOURCES = components/modules/module_api.c \
                       components/modules/io.c \
                       components/modules/saffire.c \
                       components/modules/sapi/fastcgi.c

########################################################################
# components/debugger
########################################################################

noinst_LIBRARIES += libdebugger.a
libdebugger_a_SOURCES = components/debugger/dbgp/dbgp.c \
                        components/debugger/dbgp/xml.c \
                        components/debugger/dbgp/sock.c \
                        components/debugger/dbgp/args.c \
                        components/debugger/dbgp/commands.c


########################################################################
# components/objects
########################################################################
BUILT_SOURCES += components/objects/_generated_exceptions.inc \
                 components/objects/_generated_interfaces.inc \
                 include/objects/_generated_exceptions.h \
                 include/objects/_generated_interfaces.h


include/objects/_generated_interfaces.h: components/objects/_generated_interfaces.inc

include/objects/_generated_exceptions.h: components/objects/_generated_exceptions.inc

# Create _exceptions.inc
components/objects/_generated_exceptions.inc:
	php ../support/generators/generate_exceptions.php $(@D)/exceptions.dat $@ include/objects/_generated_exceptions.h

components/objects/_generated_interfaces.inc:
	php ../support/generators/generate_interfaces.php $(@D)/interfaces.dat $@ include/objects/_generated_interfaces.h


CLEANFILES += components/objects/_generated_exceptions.inc \
              components/objects/_generated_interfaces.inc \
              include/objects/_generated_exceptions.h \
              include/objects/_generated_interfaces.h

noinst_LIBRARIES += libobjects.a
libobjects_a_SOURCES = components/objects/object.c \
                       components/objects/base.c \
                       components/objects/null.c \
                       components/objects/boolean.c \
                       components/objects/numerical.c \
                       components/objects/string.c \
                       components/objects/regex.c \
                       components/objects/callable.c \
                       components/objects/attrib.c \
                       components/objects/hash.c \
                       components/objects/tuple.c \
                       components/objects/userland.c \
                       components/objects/list.c \
                       components/objects/exception.c


########################################################################
# components/repl
########################################################################

noinst_LIBRARIES += librepl.a
librepl_a_SOURCES = components/repl/repl.c \
                    components/repl/prompt.c


########################################################################
# components/vm
########################################################################

BUILT_SOURCES += components/vm/_generated_vm_opcodes.c \
                 include/vm/_generated_vm_opcodes.h

# Create vm opcodes
components/vm/_generated_vm_opcodes.c:
	php ../support/generators/generate_vm_opcodes.php $(@D)/vm_opcodes.dat $(@D)/_generated_vm_opcodes.c include/vm/_generated_vm_opcodes.h

CLEANFILES += components/vm/_generated_vm_opcodes.c \
              include/vm/_generated_vm_opcodes.h

noinst_LIBRARIES += libvm.a
libvm_a_SOURCES = components/vm/vm.c \
                  components/vm/block.c \
                  components/vm/frame.c \
                  components/vm/context.c \
                  components/vm/thread.c \
                  components/vm/import.c \
                  components/vm/_generated_vm_opcodes.c


########################################################################
# components/gc
########################################################################

noinst_LIBRARIES += libgc.a
libgc_a_SOURCES = components/gc/gc.c


########################################################################
# main/saffire
########################################################################

# There are double archives here, this is because of resolving of objects.
SAFFIRE_LIBS = \
                 libobjects.a \
                 libgeneral.a \
                 libobjects.a \
                 libgeneral.a \
                 libcompiler.a \
                 libfastcgi.a \
                 librepl.a \
                 libvm.a \
                 libgc.a \
                 libmodules.a \
                 libdebugger.a


bin_PROGRAMS = saffire

saffire_LDADD =  $(SAFFIRE_LIBS) $(SAFFIRE_LIBS) $(edit_LIBS) ${libxml2_LIBS} -lpthread

saffire_SOURCES = main/saffire.c \
                  main/commands/config.c main/commands/fastcgi.c main/commands/lint.c \
                  main/commands/exec.c main/commands/repl.c main/commands/help.c \
                  main/commands/version.c main/commands/bytecode.c
